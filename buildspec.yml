version: 0.2

env:
  variables:
    SERVICE_DIR: "blacklists"

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Instalando pipenv..."
      - pip install pipenv

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 195265096595.dkr.ecr.us-east-2.amazonaws.com
      - echo "Instalando dependencias en $SERVICE_DIR..."
      - cd $SERVICE_DIR
      - pipenv install --dev

  build:
    commands:
      - echo "Ejecutando pruebas unitarias..."
      - pipenv run pytest --cov=src -v -s --cov-fail-under=70
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker buildx build --platform linux/amd64 -t blacklists_app --load .
      - docker tag blacklists_app:latest 195265096595.dkr.ecr.us-east-2.amazonaws.com/blacklists_app:latest     
      - echo "Volviendo a la raÃ­z para empaquetar el proyecto"
      - cd ..
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 195265096595.dkr.ecr.us-east-2.amazonaws.com/blacklists_app:latest
      - echo Writing Image Definitions file...
      - printf '[{"name":"Container-blacklists-app","imageUri":"195265096595.dkr.ecr.us-east-2.amazonaws.com/blacklists_app:latest"}]' > imagedefinitions.json
      - printf '{"ImageURI":"195265096595.dkr.ecr.us-east-2.amazonaws.com/blacklists_app:latest"}' > imageDetail.json
      - cat imagedefinitions.json

artifacts:
  files:
    - 'blacklists/**/*'
    - imagedefinitions.json
    - imageDetail.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json
  base-directory: .
  discard-paths: no
